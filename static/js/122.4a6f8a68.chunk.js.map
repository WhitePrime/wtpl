{"version":3,"file":"static/js/122.4a6f8a68.chunk.js","mappings":"mQAIe,SAASA,IACtB,IAAIC,GAASC,EAAAA,EAAAA,MACb,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,gEAA4DR,EAAOS,MAAnE,SACjBC,EAAkB,iEAA6DV,EAAOS,MAApE,SAExBE,MAAMH,GACHI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GACZX,EAAUW,EAAKG,UAElBC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,MAE9BT,MAAMD,GACHE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GACZT,EAAUS,EAAKG,UAElBC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QAC7B,CAACpB,EAAOS,SAIT,UAAC,IAAD,CAAWY,UAAU,iBAArB,WAEE,eAAIA,UAAU,aAAd,qBAEA,SAAC,IAAD,UACClB,EAAOmB,KAAI,SAASC,GACnB,OACE,SAAC,IAAD,CAAyBC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAlD,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaL,EAAMM,SAA3B,UACE,gBAAKR,UAAU,SAASS,IAAKP,EAAMQ,OAAQC,IAAKT,EAAMU,UAFhDV,EAAMM,eASpB,eAAIR,UAAU,aAAd,qBAEA,SAAC,IAAD,UACChB,EAAOiB,KAAI,SAASY,GACnB,OACE,SAAC,IAAD,CAAyBV,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAlD,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaM,EAAML,SAA3B,UACE,gBAAKR,UAAU,SAASS,IAAKI,EAAMH,OAAQC,IAAKE,EAAMD,UAFhDC,EAAML","sources":["SearchResults.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Row, Col, Container } from 'react-bootstrap';\n\nexport default function SearchResults() {\n  let params = useParams();\n  const [movies, setMovies] = useState([]);\n  const [series, setSeries] = useState([]);\n\n  useEffect(() => {\n    const movieSearchApiUrl = `https://v3-cinemeta.strem.io/catalog/movie/top/search=${params.query}.json`;\n    const seriesSearchApiUrl = `https://v3-cinemeta.strem.io/catalog/series/top/search=${params.query}.json`;\n\n    fetch(movieSearchApiUrl)\n      .then(response => response.json())\n      .then(data => {\n          console.log(data);\n          setMovies(data.metas);\n      })\n      .catch(error => console.log(error));\n    \n    fetch(seriesSearchApiUrl)\n      .then(response => response.json())\n      .then(data => {\n          console.log(data);\n          setSeries(data.metas);\n      })\n      .catch(error => console.log(error));\n  }, [params.query]);\n\n\n  return (\n    <Container className=\"home-container\">\n\n      <h2 className=\"top-movies\">Movies</h2>\n\n      <Row>\n      {movies.map(function(movie) {\n        return (\n          <Col key={movie.imdb_id} xs={6} sm={4} md={3} xl={2}>\n            <Link to={`/movies/${movie.imdb_id}`}>\n              <img className=\"poster\" src={movie.poster} alt={movie.name} />\n            </Link>\n          </Col>\n        );\n      })}\n      </Row>\n\n      <h2 className=\"top-series\">Series</h2>\n\n      <Row>\n      {series.map(function(serie) {\n        return (\n          <Col key={serie.imdb_id} xs={6} sm={4} md={3} xl={2}>\n            <Link to={`/series/${serie.imdb_id}`}>\n              <img className=\"poster\" src={serie.poster} alt={serie.name} />\n            </Link>\n          </Col>\n        );\n      })}\n      </Row>\n    </Container>\n  );\n}\n"],"names":["SearchResults","params","useParams","useState","movies","setMovies","series","setSeries","useEffect","movieSearchApiUrl","query","seriesSearchApiUrl","fetch","then","response","json","data","console","log","metas","catch","error","className","map","movie","xs","sm","md","xl","to","imdb_id","src","poster","alt","name","serie"],"sourceRoot":""}