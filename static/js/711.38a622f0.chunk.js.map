{"version":3,"file":"static/js/711.38a622f0.chunk.js","mappings":"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","sources":["EpisodeDetails.js","SocialButtons.js","ImdbTitleDetails.js","TorrentList.js"],"sourcesContent":["import './SerieDetails.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ImdbTitleDetails from \"./ImdbTitleDetails\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport constants from './config/constants';\r\nimport TorrentList from './TorrentList';\r\n\r\nexport default function EpisodeDetails() {\r\n  let params = useParams();\r\n  const [details, setDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const imdb_id = params.imdb_id;\r\n    const seasonNumber = params.season.length > 1 ? params.season : \"0\" + params.season;\r\n    const episodeNumber = params.episode.length > 1 ? params.episode : \"0\" + params.episode;\r\n\r\n    const apiUrl = `https://v3-cinemeta.strem.io/meta/series/${imdb_id}.json`;\r\n    fetch(apiUrl)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n\r\n        let seasonsDup = data.meta.videos\r\n          .map(episode => {\r\n            return episode.season;\r\n          });\r\n        console.log(seasonsDup);\r\n        seasonsDup.sort((a, b) => a - b);\r\n        // remove duplicates\r\n        const seasons = [...new Set(seasonsDup)];\r\n        // if array contains element with value 0 then move it to last position\r\n        if (seasons.includes(0)) {\r\n          seasons.push(seasons.splice(seasons.indexOf(0), 1)[0]);\r\n        }\r\n\r\n        console.log(seasons);\r\n\r\n        const shareUrl = `${window.location.origin}/series/${data.meta.imdb_id}`;\r\n        var serie = { ...data.meta, shareUrl, seasons };\r\n        console.log(serie);\r\n        setDetails(serie);\r\n        document.title = `${data.meta.name} S${seasonNumber}E${episodeNumber} - ${constants.SITE_TITLE}`;\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, [params.imdb_id, params.season, params.episode]);\r\n\r\n  return (\r\n    <div \r\n      className=\"imdb-title-container dark-overlay\" \r\n      style={{ background: \"linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(\" + details?.background + \")\" }}\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"\" xs={12} md={6} xl={8}>\r\n            <ImdbTitleDetails details={details} />\r\n          </Col>\r\n          <Col className=\"\" xs={12} md={6} xl={4}>\r\n            Season {params.season} - Episode {params.episode}\r\n            \r\n            <TorrentList serieImdbId={details?.imdb_id} season={params.season} episode={params.episode} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\r\nimport { faWhatsapp, faFacebook, faTwitter } from '@fortawesome/free-brands-svg-icons'\r\nimport './SocialButtons.css';\r\n\r\nexport default function SocialButtons({ shareUrl }) {\r\n   return (\r\n    <div className=\"social-buttons-wrapper\">\r\n        <a className=\"btn btn-circle\" href={`https://api.whatsapp.com/send?text=${shareUrl}`}>\r\n            <FontAwesomeIcon icon={faWhatsapp} size=\"lg\" />\r\n        </a>\r\n        <a className=\"btn btn-circle\" href={`https://www.facebook.com/sharer/sharer.php?u=${shareUrl}`}>\r\n            <FontAwesomeIcon icon={faFacebook} size=\"lg\" />\r\n        </a>       \r\n        <a className=\"btn btn-circle\" href={`https://twitter.com/intent/tweet?text=${shareUrl}`}>\r\n            <FontAwesomeIcon icon={faTwitter} size=\"lg\" />\r\n        </a>\r\n        <button className=\"btn btn-circle\" onClick={() => navigator.clipboard.writeText(shareUrl)}>\r\n            <FontAwesomeIcon icon={faLink} size=\"lg\" />\r\n        </button>\r\n    </div>\r\n  );\r\n}","import './ImdbTitleDetails.css';\r\nimport SocialButtons from './SocialButtons';\r\n\r\nexport default function ImdbTitleDetails({details}) {\r\n  return (\r\n      <div>\r\n\r\n        <h2>{details?.logo ? <img className=\"imdb-logo\" src={details?.logo} alt={details?.name}></img> : details?.name}</h2>\r\n        \r\n        <SocialButtons shareUrl={details.shareUrl} />\r\n\r\n        <p>\r\n          {details?.runtime && \r\n            <span>{details?.runtime} | </span>\r\n          } \r\n          <span>{details?.year} | </span>          \r\n          <span>IMDB rating: {details?.imdbRating}</span>\r\n        </p>\r\n        \r\n        {details?.genre && details.genre.length > 0 &&\r\n            <div className=\"genre-container\">\r\n                <h3>Genre</h3>\r\n                {details?.genre?.map(function(genre) {\r\n                    return <span key={genre}>{genre} </span>;\r\n                })}\r\n            </div>\r\n        }\r\n\r\n        {details?.director && details.director.length > 0 &&\r\n            <div className=\"director-container\">\r\n                <h3>Director</h3>\r\n                {details?.director?.map(function(director) {\r\n                    return <span key={director}>{director}&nbsp;</span>;\r\n                })}\r\n            </div>\r\n        }\r\n\r\n        {details?.writer && details.writer.length > 0 &&\r\n            <div className=\"writer-container\">   \r\n                <h3>Writer</h3>\r\n                {details?.director?.map(function(director) {\r\n                    return <span key={director}>{director}&nbsp;</span>;\r\n                })}\r\n            </div>\r\n        }\r\n\r\n        {details?.cast && details.cast.length > 0 &&\r\n        <div className=\"cast-container\">\r\n            <h3>Cast</h3>\r\n\r\n            {details?.cast?.map(function(actor) {\r\n                return (<span key={actor}>{actor}&nbsp;</span>);\r\n            })}\r\n            </div>\r\n        }\r\n      </div>\r\n  );\r\n}\r\n","\r\nimport './TorrentList.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nexport default function TorrentList({ movieImdbId, serieImdbId, season, episode }) {\r\n  const [streams, setStreams] = useState([]);\r\n\r\n  useEffect(() => {\r\n      if (movieImdbId) {\r\n        const apiUrl = `https://torrentio.strem.fun/qualityfilter=4k/stream/movie/${movieImdbId}.json`;\r\n        \r\n        fetch(apiUrl)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                let streams = data.streams.map(stream => {\r\n                  // check if contains newline\r\n                  if (stream.title.includes('\\n')) {\r\n                    return {\r\n                      title: stream.title.split('\\n')[0],\r\n                      subtitle: stream.title.split('\\n')[1],\r\n                      ...stream\r\n                    };\r\n                  }\r\n                  return stream;\r\n              });\r\n              setStreams(streams);\r\n            })\r\n            .catch(error => console.log(error));\r\n      } else {\r\n        const apiUrl = `https://torrentio.strem.fun/qualityfilter=4k/stream/series/${serieImdbId}:${season}:${episode}.json`\r\n        \r\n        fetch(apiUrl)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                let streams = data.streams.map(stream => {\r\n                    // check if contains newline\r\n                    if (stream.title.includes('\\n')) {\r\n                      return {\r\n                        title: stream.title.split('\\n')[0],\r\n                        subtitle: stream.title.split('\\n')[1],\r\n                        ...stream\r\n                      };\r\n                    }\r\n                    return stream;\r\n                });\r\n                setStreams(streams);\r\n            })\r\n            .catch(error => console.log(error));\r\n      }\r\n  }, [movieImdbId, serieImdbId, season, episode]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Torrents</h2>\r\n      <Container id='torrentList'>\r\n        {streams.map(stream => (\r\n            <Row className='torrentInfo' key={stream.infoHash}>\r\n                <Col xs='12'>\r\n                    <Link className=\"torrentLink text-white\" to={`/play/${stream.infoHash}`}>\r\n                      {stream.title}\r\n                      {stream.subtitle && <span className='torrentSubtitle'><br />{stream.subtitle}</span>}\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"names":["EpisodeDetails","params","useParams","useState","details","setDetails","useEffect","imdb_id","seasonNumber","season","length","episodeNumber","episode","apiUrl","fetch","then","response","json","data","console","log","seasonsDup","meta","videos","map","sort","a","b","seasons","Set","includes","push","splice","indexOf","shareUrl","window","location","origin","serie","document","title","name","constants","catch","error","className","style","background","xs","md","xl","serieImdbId","SocialButtons","href","icon","faWhatsapp","size","faFacebook","faTwitter","onClick","navigator","clipboard","writeText","faLink","ImdbTitleDetails","logo","src","alt","runtime","year","imdbRating","genre","director","writer","cast","actor","TorrentList","movieImdbId","streams","setStreams","stream","split","subtitle","Container","id","Row","Col","to","infoHash"],"sourceRoot":""}