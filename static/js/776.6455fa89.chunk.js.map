{"version":3,"file":"static/js/776.6455fa89.chunk.js","mappings":"oOAKe,SAASA,IAItB,OACE,UAAC,IAAD,YACE,oCAEA,SAAC,IAAD,CAAkBC,UANJ,sgB,uGCHdC,EAAcC,EAAQ,MAwF5B,IAtFA,YAA0C,IAAdF,EAAa,EAAbA,UACpB,GAAkCG,EAAAA,EAAAA,UAAS,CAC3CC,gBAAiB,GACjBC,iBAAkB,GAClBC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,GACdC,gBAAiB,EACjBC,qBAAsB,EACtBC,mBAAoB,IARxB,eAAKC,EAAL,KAAmBC,EAAnB,KA0DA,OA/CAC,EAAAA,EAAAA,YAAU,WAEN,IACIC,EAAS,IADIb,EAAQ,OAGzBa,EAAOC,GAAG,SAAS,SAAAC,GACfC,QAAQC,IAAI,yBAA2BF,EAAIG,YAG/CL,EAAOM,IAAIrB,GAAW,SAACsB,GACnB,IAAMC,EAAWC,aAAY,WAAO,IAAD,MAC/BX,EAAgB,CACZN,iBAAqC,IAAnBe,EAAQG,UAAgBC,QAAQ,GAAK,IACvDjB,gBAAe,UAAEa,EAAQK,gBAAV,QAAsB,EACrCjB,qBAAsBT,EAAW,UAACqB,EAAQM,qBAAT,QAA0B,GAAK,KAChEjB,mBAAoBV,EAAW,UAACqB,EAAQO,mBAAT,QAAwB,GAAK,SAEjE,KAEHP,EAAQN,GAAG,QAAQ,WACfH,EAAgB,CACZN,gBAAiB,SAErBW,QAAQC,IAAI,kBACZW,cAAcP,MAGlBV,EAAgB,CACZT,gBAAiBkB,EAAQS,SACzB1B,iBAAkBiB,EAAQU,UAC1B1B,YAAagB,EAAQW,KACrBzB,aAAcc,EAAQY,QAG1BhB,QAAQC,IAAIG,EAAQY,OAGpB,IADA,IAAIC,EAAcb,EAAQY,MAAM,GACvBE,EAAI,EAAGA,EAAId,EAAQY,MAAMG,OAAQD,IAClCd,EAAQY,MAAME,GAAGC,OAASF,EAAYE,QAAUf,EAAQY,MAAME,GAAGH,KAAKK,SAAS,UAC/EH,EAAcb,EAAQY,MAAME,IAGpCD,EAAYI,SAAS,oBACrBrB,QAAQC,IAAIgB,QAEjB,CAACnC,KAGA,UAAC,IAAD,CAAWwC,OAAK,EAAhB,WACI,UAAC,IAAD,YACI,SAAC,IAAD,WACI,0BAAO5B,EAAaL,qBAExB,UAAC,IAAD,YACI,SAAC,IAAD,CAAiBkC,KAAMC,EAAAA,MAD3B,IACwC9B,EAAaH,gBADrD,aAGA,UAAC,IAAD,YACI,SAAC,IAAD,CAAiBgC,KAAME,EAAAA,MAD3B,IAC4C/B,EAAaF,yBAEzD,UAAC,IAAD,YACI,SAAC,IAAD,CAAiB+B,KAAMG,EAAAA,MAD3B,IAC0ChC,EAAaD,0BAG3D,SAAC,IAAD,WACI,SAAC,IAAD,WACI,kBAAOkC,GAAG,kBAAkBC,UAAU","sources":["SintelSample.js","WebTorrentPlayer.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport { Container } from 'react-bootstrap';\r\nimport WebTorrentPlayer from \"./WebTorrentPlayer\";\r\n\r\nexport default function SintelSample() {\r\n  // Sintel, a free, Creative Commons movie\r\n  const torrentId = 'magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&dn=Sintel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fsintel.torrent';\r\n  \r\n  return (\r\n    <Container>\r\n      <h2>Sintel</h2>\r\n\r\n      <WebTorrentPlayer torrentId={torrentId}></WebTorrentPlayer>\r\n    </Container>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsers, faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nconst prettyBytes = require('pretty-bytes');\r\n\r\nfunction WebTorrentPlayer({ torrentId }) {\r\n    var [torrentState, setTorrentState] = useState({\r\n        torrentInfoHash: \"\",\r\n        torrentMagnetURI: \"\",\r\n        torrentName: \"\",\r\n        torrentProgress: \"\",\r\n        torrentFiles: [],\r\n        torrentNumPeers: 0,\r\n        torrentDownloadSpeed: 0,\r\n        torrentUploadSpeed: 0,\r\n      });\r\n\r\n    useEffect(() => {\r\n\r\n        var WebTorrent = require('webtorrent/webtorrent.min.js');\r\n        var client = new WebTorrent();\r\n\r\n        client.on('error', err => {\r\n            console.log('[+] Webtorrent error: ' + err.message);\r\n        });\r\n\r\n        client.add(torrentId, (torrent) => {\r\n            const interval = setInterval(() => {\r\n                setTorrentState({\r\n                    torrentProgress: (torrent.progress * 100).toFixed(1) + '%',\r\n                    torrentNumPeers: torrent.numPeers ?? 0,\r\n                    torrentDownloadSpeed: prettyBytes(torrent.downloadSpeed ?? 0) + '/s',\r\n                    torrentUploadSpeed: prettyBytes(torrent.uploadSpeed ?? 0) + '/s',\r\n                });\r\n            }, 500);\r\n\r\n            torrent.on('done', () => {\r\n                setTorrentState({\r\n                    torrentProgress: 100 + '%',\r\n                });\r\n                console.log('Progress: 100%');\r\n                clearInterval(interval);\r\n            })\r\n    \r\n            setTorrentState({\r\n                torrentInfoHash: torrent.infoHash,\r\n                torrentMagnetURI: torrent.magnetURI,\r\n                torrentName: torrent.name,\r\n                torrentFiles: torrent.files,\r\n            });\r\n\r\n            console.log(torrent.files);\r\n            // Find largest file\r\n            var largestFile = torrent.files[0]\r\n            for (var i = 1; i < torrent.files.length; i++) {\r\n                if (torrent.files[i].length > largestFile.length && torrent.files[i].name.endsWith('.mp4')) {\r\n                    largestFile = torrent.files[i]\r\n                }\r\n            }\r\n            largestFile.renderTo('#video-container');\r\n            console.log(largestFile);\r\n        });\r\n    }, [torrentId]);\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <span>{torrentState.torrentProgress}</span>\r\n                </Col>\r\n                <Col>\r\n                    <FontAwesomeIcon icon={faUsers} /> {torrentState.torrentNumPeers} peers\r\n                </Col>\r\n                <Col>\r\n                    <FontAwesomeIcon icon={faArrowDown} /> {torrentState.torrentDownloadSpeed}\r\n                </Col>\r\n                <Col>\r\n                    <FontAwesomeIcon icon={faArrowUp} /> {torrentState.torrentUploadSpeed}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <video id=\"video-container\" className=\"ratio ratio-16x9\">\r\n                        {/* <video id=\"player\"></video> */}\r\n                    </video>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default WebTorrentPlayer;"],"names":["SintelSample","torrentId","prettyBytes","require","useState","torrentInfoHash","torrentMagnetURI","torrentName","torrentProgress","torrentFiles","torrentNumPeers","torrentDownloadSpeed","torrentUploadSpeed","torrentState","setTorrentState","useEffect","client","on","err","console","log","message","add","torrent","interval","setInterval","progress","toFixed","numPeers","downloadSpeed","uploadSpeed","clearInterval","infoHash","magnetURI","name","files","largestFile","i","length","endsWith","renderTo","fluid","icon","faUsers","faArrowDown","faArrowUp","id","className"],"sourceRoot":""}