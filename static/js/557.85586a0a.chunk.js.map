{"version":3,"file":"static/js/557.85586a0a.chunk.js","mappings":"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","sources":["ImdbTitleDetails.js","MovieDetails.js","SocialButtons.js","TorrentList.js"],"sourcesContent":["import { Col, Row } from 'react-bootstrap';\nimport './ImdbTitleDetails.css';\n\nexport default function ImdbTitleDetails({ details }) {\n    return (\n        <>\n            <Row>\n                {details?.genre && details.genre.length > 0 &&\n                    <Col xs=\"6\" md=\"12\">\n                        <div className=\"genre-container\">\n                            <h4>Genre</h4>\n                            {details?.genre?.map(function (genre) {\n                                return <span key={genre}>{genre} </span>;\n                            })}\n                        </div>\n                    </Col>\n                }\n                {details?.director && details.director.length > 0 &&\n                    <Col xs=\"6\" md=\"12\">\n                        <div className=\"director-container\">\n                            <h4>Director</h4>\n                            {details?.director?.map(function (director) {\n                                return <span key={director}>{director}&nbsp;</span>;\n                            })}\n                        </div>\n                    </Col>\n                }\n                {details?.writer && details.writer.length > 0 &&\n                    <Col xs=\"6\" md=\"12\">\n                        <div className=\"writer-container\">\n                            <h4>Writer</h4>\n                            {details?.writer?.map(function (writer) {\n                                return <span key={writer}>{writer}&nbsp;</span>;\n                            })}\n                        </div>\n                    </Col>\n                }\n                {details?.cast && details.cast.length > 0 &&\n                    <Col xs=\"6\" md=\"12\">\n                        <div className=\"cast-container\">\n                            <h4>Cast</h4>\n\n                            {details?.cast?.map(function (actor) {\n                                return (<span key={actor}>{actor}&nbsp;</span>);\n                            })}\n                        </div>\n                    </Col>\n                }\n            </Row>\n        </>\n    );\n}\n","import './MovieDetails.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ImdbTitleDetails from \"./ImdbTitleDetails\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport constants from './config/constants';\nimport TorrentList from './TorrentList';\nimport SocialButtons from './SocialButtons';\n\nexport default function MovieDetails() {\n  let params = useParams();\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    const imdb_id = params.imdb_id;\n    const query = `{\"params\":[null,{\"query\":{\"imdb_id\":\"${imdb_id}\"}}],\"method\":\"meta.get\",\"id\":1,\"jsonrpc\":\"2.0\"}`;\n    console.log(query);\n    const apiUrl = `https://cinemeta.strem.io/stremioget/stremio/v1/q.json?b=${btoa(query)}`;\n    fetch(apiUrl)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        setDetails({ ...data.result, shareUrl: `${window.location.origin}/movies/${data.result.imdb_id}` });\n        document.title = `${data.result.name} - ${constants.SITE_TITLE}`;\n      })\n      .catch(error => console.log(error));\n  }, [params.imdb_id]);\n\n  return (\n    <div className=\"imdb-title-container dark-overlay\" style={{ background: \"linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(\" + details?.background + \")\" }}>\n      <Container>\n        <Row>\n          <Col xs=\"12\" className=\"text-center\">\n            {details?.logo ?\n              <div className=\"text-center\">\n                <img className=\"imdb-logo mx-auto d-block\" src={details?.logo} alt={details?.name}></img>\n              </div>\n              :\n              <h2>details?.name</h2>}\n\n          </Col>\n          <Col xs=\"12\" className=\"text-center\">\n            <p>\n              {details?.runtime &&\n                <span>{details?.runtime} | </span>\n              }\n              <span>{details?.year} | </span>\n              <span>IMDB rating: {details?.imdbRating}</span>\n            </p>\n          </Col>\n          <Col xs=\"12\" className=\"text-center\">\n            <SocialButtons shareUrl={details.shareUrl} />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\">\n            <ImdbTitleDetails details={details} />\n          </Col>\n          <Col xs=\"12\" sm=\"6\">\n            <TorrentList movieImdbId={details?.imdb_id} />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\nimport { faWhatsapp, faFacebook, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport './SocialButtons.css';\n\nexport default function SocialButtons({ shareUrl }) {\n   return (\n    <div className=\"social-buttons-wrapper\">\n        <a className=\"btn btn-circle\" href={`https://api.whatsapp.com/send?text=${shareUrl}`}>\n            <FontAwesomeIcon icon={faWhatsapp} size=\"lg\" />\n        </a>\n        <a className=\"btn btn-circle\" href={`https://www.facebook.com/sharer/sharer.php?u=${shareUrl}`}>\n            <FontAwesomeIcon icon={faFacebook} size=\"lg\" />\n        </a>       \n        <a className=\"btn btn-circle\" href={`https://twitter.com/intent/tweet?text=${shareUrl}`}>\n            <FontAwesomeIcon icon={faTwitter} size=\"lg\" />\n        </a>\n        <button className=\"btn btn-circle\" onClick={() => navigator.clipboard.writeText(shareUrl)}>\n            <FontAwesomeIcon icon={faLink} size=\"lg\" />\n        </button>\n    </div>\n  );\n}","\nimport './TorrentList.css';\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row } from 'react-bootstrap';\n\nexport default function TorrentList({ movieImdbId, serieImdbId, season, episode }) {\n  const [streams, setStreams] = useState([]);\n\n  useEffect(() => {\n      if (movieImdbId) {\n        const apiUrl = `https://torrentio.strem.fun/sort=seeders|qualityfilter=4k/stream/movie/${movieImdbId}.json`;\n        \n        fetch(apiUrl)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                let streams = data.streams.map(stream => {\n                  // check if contains newline\n                  if (stream.title.includes('\\n')) {\n                    return {\n                      ...stream,\n                      title: stream.title.split('\\n')[0],\n                      subtitle: stream.title.split('\\n')[1],\n                    };\n                  }\n                  return stream;\n              });\n              setStreams(streams);\n            })\n            .catch(error => console.log(error));\n      } else {\n        const apiUrl = `https://torrentio.strem.fun/sort=seeders|qualityfilter=4k/stream/series/${serieImdbId}:${season}:${episode}.json`\n        \n        fetch(apiUrl)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                let streams = data.streams.map(stream => {\n                    // check if contains newline\n                    if (stream.title.includes('\\n')) {\n                      return {\n                        ...stream,\n                        title: stream.title.split('\\n')[0],\n                        subtitle: stream.title.split('\\n')[1],\n                      };\n                    }\n                    return stream;\n                });\n                setStreams(streams);\n            })\n            .catch(error => console.log(error));\n      }\n  }, [movieImdbId, serieImdbId, season, episode]);\n\n  return (\n    <>\n      <h2>Torrents</h2>\n      <Container id='torrentList'>\n        {streams.map(stream => (\n            <Row className='torrentInfo' key={stream.infoHash}>\n                <Col xs='12'>\n                  <a className=\"torrentLink text-white\" href={\"magnet:?xt=urn:btih:\" + stream.infoHash} target='_blank' rel='noopener noreferrer'>\n                      {stream.title}\n                      {stream.subtitle && <span className='torrentSubtitle'><br />{stream.subtitle}</span>}\n                  </a>\n                </Col>\n            </Row>\n        ))}\n      </Container>\n    </>\n  );\n}\n"],"names":["ImdbTitleDetails","details","Row","genre","length","Col","xs","md","className","map","director","writer","cast","actor","MovieDetails","params","useParams","useState","setDetails","useEffect","imdb_id","query","console","log","apiUrl","btoa","fetch","then","response","json","data","result","shareUrl","window","location","origin","document","title","name","constants","catch","error","style","background","Container","logo","src","alt","runtime","year","imdbRating","SocialButtons","sm","TorrentList","movieImdbId","href","icon","faWhatsapp","size","faFacebook","faTwitter","onClick","navigator","clipboard","writeText","faLink","serieImdbId","season","episode","streams","setStreams","stream","includes","split","subtitle","id","infoHash","target","rel"],"sourceRoot":""}