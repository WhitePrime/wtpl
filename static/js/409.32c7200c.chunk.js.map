{"version":3,"file":"static/js/409.32c7200c.chunk.js","mappings":"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","sources":["ImdbTitleDetails.js","SerieDetails.js","SocialButtons.js"],"sourcesContent":["import { Col, Row } from 'react-bootstrap';\nimport './ImdbTitleDetails.css';\n\nexport default function ImdbTitleDetails({ details }) {\n    return (\n        <>\n            <Row>\n                {details?.genre && details.genre.length > 0 &&\n                    <Col xs=\"6\" md=\"12\">\n                        <div className=\"genre-container\">\n                            <h4>Genre</h4>\n                            {details?.genre?.map(function (genre) {\n                                return <span key={genre}>{genre} </span>;\n                            })}\n                        </div>\n                    </Col>\n                }\n                {details?.director && details.director.length > 0 &&\n                    <Col xs=\"6\" md=\"12\">\n                        <div className=\"director-container\">\n                            <h4>Director</h4>\n                            {details?.director?.map(function (director) {\n                                return <span key={director}>{director}&nbsp;</span>;\n                            })}\n                        </div>\n                    </Col>\n                }\n                {details?.writer && details.writer.length > 0 &&\n                    <Col xs=\"6\" md=\"12\">\n                        <div className=\"writer-container\">\n                            <h4>Writer</h4>\n                            {details?.writer?.map(function (writer) {\n                                return <span key={writer}>{writer}&nbsp;</span>;\n                            })}\n                        </div>\n                    </Col>\n                }\n                {details?.cast && details.cast.length > 0 &&\n                    <Col xs=\"6\" md=\"12\">\n                        <div className=\"cast-container\">\n                            <h4>Cast</h4>\n\n                            {details?.cast?.map(function (actor) {\n                                return (<span key={actor}>{actor}&nbsp;</span>);\n                            })}\n                        </div>\n                    </Col>\n                }\n            </Row>\n        </>\n    );\n}\n","import './SerieDetails.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ImdbTitleDetails from \"./ImdbTitleDetails\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport constants from './config/constants';\nimport SocialButtons from './SocialButtons';\n\nexport default function SerieDetails() {\n  let params = useParams();\n  const [details, setDetails] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState([]);\n\n  useEffect(() => {\n    const imdb_id = params.imdb_id;\n    const apiUrl = `https://v3-cinemeta.strem.io/meta/series/${imdb_id}.json`;\n    fetch(apiUrl)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n\n        let seasonsDup = data.meta.videos\n          .map(episode => {\n            return episode.season;\n          });\n        console.log(seasonsDup);\n        seasonsDup.sort((a, b) => a - b);\n        // remove duplicates\n        const seasons = [...new Set(seasonsDup)];\n        // if array contains element with value 0 then move it to last position\n        if (seasons.includes(0)) {\n          seasons.push(seasons.splice(seasons.indexOf(0), 1)[0]);\n        }\n\n        console.log(seasons);\n\n        const shareUrl = `${window.location.origin}/series/${data.meta.imdb_id}`;\n        var serie = { ...data.meta, shareUrl, seasons };\n        console.log(serie);\n        setDetails(serie);\n        setSelectedSeason(1);\n        document.title = `${data.meta.name} - ${constants.SITE_TITLE}`;\n      })\n      .catch(error => console.log(error));\n  }, [params.imdb_id]);\n\n  function handleSeasonChange(season) {\n    setSelectedSeason(season);\n  }\n\n  return (\n    <div \n      className=\"imdb-title-container dark-overlay\" \n      style={{ background: \"linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(\" + details?.background + \")\" }}\n    >\n      <Container>\n        <Row>\n          <Col xs=\"12\" className=\"text-center\">\n            {details?.logo ?\n              <div className=\"text-center\">\n                <img className=\"imdb-logo mx-auto d-block\" src={details?.logo} alt={details?.name}></img>\n              </div>\n              :\n              <h2>details?.name</h2>}\n\n          </Col>\n          <Col xs=\"12\" className=\"text-center\">\n            <p>\n              {details?.runtime &&\n                <span>{details?.runtime} | </span>\n              }\n              <span>{details?.year} | </span>\n              <span>IMDB rating: {details?.imdbRating}</span>\n            </p>\n          </Col>\n          <Col xs=\"12\" className=\"text-center\">\n            <SocialButtons shareUrl={details.shareUrl} />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"serieDetails\" xs={12} md={6} xl={8}>\n            <ImdbTitleDetails details={details} />\n          </Col>\n          <Col className=\"seasonsList\" xs={12} md={6} xl={4}>\n            <h2>Seasons</h2>\n            {details?.seasons && details?.seasons.map(season => (\n              <button className={\"btn season \" + (season === selectedSeason ? \" active\" : \"\")} key={season} onClick={() => handleSeasonChange(season)}>\n                <span>{season === 0 ? 'special' : season}</span>\n              </button>\n            ))}\n            <hr></hr>\n            {details?.seasons && details?.seasons.filter(season => season === selectedSeason).map(season => (\n              <div key={season}>\n                <ul>\n                  {details?.seasons && details?.videos.filter(episode => episode.season === season).map(episode => (\n                    <li key={episode.id}>\n                      <a className=\"text-white\" href={`/series/${details?.imdb_id}/season-${season}/episode-${episode.number}`}>\n                        Episode: {episode.number} - {episode.name}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\nimport { faWhatsapp, faFacebook, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport './SocialButtons.css';\n\nexport default function SocialButtons({ shareUrl }) {\n   return (\n    <div className=\"social-buttons-wrapper\">\n        <a className=\"btn btn-circle\" href={`https://api.whatsapp.com/send?text=${shareUrl}`}>\n            <FontAwesomeIcon icon={faWhatsapp} size=\"lg\" />\n        </a>\n        <a className=\"btn btn-circle\" href={`https://www.facebook.com/sharer/sharer.php?u=${shareUrl}`}>\n            <FontAwesomeIcon icon={faFacebook} size=\"lg\" />\n        </a>       \n        <a className=\"btn btn-circle\" href={`https://twitter.com/intent/tweet?text=${shareUrl}`}>\n            <FontAwesomeIcon icon={faTwitter} size=\"lg\" />\n        </a>\n        <button className=\"btn btn-circle\" onClick={() => navigator.clipboard.writeText(shareUrl)}>\n            <FontAwesomeIcon icon={faLink} size=\"lg\" />\n        </button>\n    </div>\n  );\n}"],"names":["ImdbTitleDetails","details","Row","genre","length","Col","xs","md","className","map","director","writer","cast","actor","SerieDetails","params","useParams","useState","setDetails","selectedSeason","setSelectedSeason","useEffect","imdb_id","apiUrl","fetch","then","response","json","data","console","log","seasonsDup","meta","videos","episode","season","sort","a","b","seasons","Set","includes","push","splice","indexOf","shareUrl","window","location","origin","serie","document","title","name","constants","catch","error","style","background","logo","src","alt","runtime","year","imdbRating","xl","onClick","handleSeasonChange","filter","href","number","id","SocialButtons","icon","faWhatsapp","size","faFacebook","faTwitter","navigator","clipboard","writeText","faLink"],"sourceRoot":""}