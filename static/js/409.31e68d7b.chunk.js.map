{"version":3,"file":"static/js/409.31e68d7b.chunk.js","mappings":"gNAKe,SAASA,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SACrC,OACC,iBAAKC,UAAU,yBAAf,WACI,cAAGA,UAAU,iBAAiBC,KAAI,6CAAwCF,GAA1E,UACI,SAAC,IAAD,CAAiBG,KAAMC,EAAAA,IAAYC,KAAK,UAE5C,cAAGJ,UAAU,iBAAiBC,KAAI,uDAAkDF,GAApF,UACI,SAAC,IAAD,CAAiBG,KAAMG,EAAAA,IAAYD,KAAK,UAE5C,cAAGJ,UAAU,iBAAiBC,KAAI,gDAA2CF,GAA7E,UACI,SAAC,IAAD,CAAiBG,KAAMI,EAAAA,IAAWF,KAAK,UAE3C,mBAAQJ,UAAU,iBAAiBO,QAAS,kBAAMC,UAAUC,UAAUC,UAAUX,IAAhF,UACI,SAAC,IAAD,CAAiBG,KAAMS,EAAAA,IAAQP,KAAK,YCfjC,SAASQ,EAAT,GAAsC,IAAD,QAAVC,EAAU,EAAVA,QACxC,OACI,4BAEE,wBAAY,OAAPA,QAAO,IAAPA,GAAAA,EAASC,MAAO,gBAAKd,UAAU,YAAYe,IAAG,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAASC,KAAME,IAAG,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAASI,OAA7E,OAA4FJ,QAA5F,IAA4FA,OAA5F,EAA4FA,EAASI,QAE1G,SAAC,EAAD,CAAelB,SAAUc,EAAQd,YAEjC,0BACU,OAAPc,QAAO,IAAPA,OAAA,EAAAA,EAASK,WACR,mCAAOL,QAAP,IAAOA,OAAP,EAAOA,EAASK,QAAhB,UAEF,mCAAOL,QAAP,IAAOA,OAAP,EAAOA,EAASM,KAAhB,UACA,mDAAoBN,QAApB,IAAoBA,OAApB,EAAoBA,EAASO,kBAGvB,OAAPP,QAAO,IAAPA,OAAA,EAAAA,EAASQ,QAASR,EAAQQ,MAAMC,OAAS,IACtC,iBAAKtB,UAAU,kBAAf,WACI,kCADJ,OAEKa,QAFL,IAEKA,GAFL,UAEKA,EAASQ,aAFd,aAEK,EAAgBE,KAAI,SAASF,GAC1B,OAAO,4BAAmBA,EAAnB,MAAWA,UAKtB,OAAPR,QAAO,IAAPA,OAAA,EAAAA,EAASW,WAAYX,EAAQW,SAASF,OAAS,IAC5C,iBAAKtB,UAAU,qBAAf,WACI,qCADJ,OAEKa,QAFL,IAEKA,GAFL,UAEKA,EAASW,gBAFd,aAEK,EAAmBD,KAAI,SAASC,GAC7B,OAAO,4BAAsBA,EAAtB,SAAWA,UAKtB,OAAPX,QAAO,IAAPA,OAAA,EAAAA,EAASY,SAAUZ,EAAQY,OAAOH,OAAS,IACxC,iBAAKtB,UAAU,mBAAf,WACI,mCADJ,OAEKa,QAFL,IAEKA,GAFL,UAEKA,EAASW,gBAFd,aAEK,EAAmBD,KAAI,SAASC,GAC7B,OAAO,4BAAsBA,EAAtB,SAAWA,UAKtB,OAAPX,QAAO,IAAPA,OAAA,EAAAA,EAASa,OAAQb,EAAQa,KAAKJ,OAAS,IACxC,iBAAKtB,UAAU,iBAAf,WACI,iCADJ,OAGKa,QAHL,IAGKA,GAHL,UAGKA,EAASa,YAHd,aAGK,EAAeH,KAAI,SAASI,GACzB,OAAQ,4BAAmBA,EAAnB,SAAWA,c,4LC5CpB,SAASC,IACtB,IAAIC,GAASC,EAAAA,EAAAA,MACb,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOlB,EAAP,KAAgBmB,EAAhB,KACA,GAA4CD,EAAAA,EAAAA,UAAS,IAArD,eAAOE,EAAP,KAAuBC,EAAvB,KAuCA,OArCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUP,EAAOO,QACjBC,EAAM,mDAA+CD,EAA/C,SACZE,MAAMD,GACHE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GAEZ,IAAIG,EAAaH,EAAKI,KAAKC,OACxBxB,KAAI,SAAAyB,GACH,OAAOA,EAAQC,UAEnBN,QAAQC,IAAIC,GACZA,EAAWK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAE9B,IAAMC,GAAO,OAAO,IAAIC,IAAIT,IAExBQ,EAAQE,SAAS,IACnBF,EAAQG,KAAKH,EAAQI,OAAOJ,EAAQK,QAAQ,GAAI,GAAG,IAGrDf,QAAQC,IAAIS,GAEZ,IAAMtD,EAAQ,UAAM4D,OAAOC,SAASC,OAAtB,mBAAuCnB,EAAKI,KAAKV,SAC3D0B,GAAK,kBAAQpB,EAAKI,MAAb,IAAmB/C,SAAAA,EAAUsD,QAAAA,IACtCV,QAAQC,IAAIkB,GACZ9B,EAAW8B,GACX5B,EAAkB,GAClB6B,SAASC,MAAT,UAAoBtB,EAAKI,KAAK7B,KAA9B,cAAwCgD,EAAAA,EAAAA,eAEzCC,OAAM,SAAAC,GAAK,OAAIxB,QAAQC,IAAIuB,QAC7B,CAACtC,EAAOO,WAOT,gBACEpC,UAAU,oCACVoE,MAAO,CAAEC,WAAY,0EAAoExD,QAApE,IAAoEA,OAApE,EAAoEA,EAASwD,YAAa,KAFjH,UAIE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAKrE,UAAU,eAAesE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAjD,UACE,SAAC,IAAD,CAAkB3D,QAASA,OAE7B,UAAC,IAAD,CAAKb,UAAU,cAAcsE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAhD,WACE,qCACQ,OAAP3D,QAAO,IAAPA,OAAA,EAAAA,EAASwC,WAAT,OAAoBxC,QAApB,IAAoBA,OAApB,EAAoBA,EAASwC,QAAQ9B,KAAI,SAAA0B,GAAM,OAC9C,mBAAQjD,UAAW,eAAiBiD,IAAWhB,EAAiB,UAAY,IAAkB1B,QAAS,kBAjBnH,SAA4B0C,GAC1Bf,EAAkBe,GAgBqGwB,CAAmBxB,IAAhI,UACE,0BAAkB,IAAXA,EAAe,UAAYA,KADkDA,QAIxF,mBACQ,OAAPpC,QAAO,IAAPA,OAAA,EAAAA,EAASwC,WAAT,OAAoBxC,QAApB,IAAoBA,OAApB,EAAoBA,EAASwC,QAAQqB,QAAO,SAAAzB,GAAM,OAAIA,IAAWhB,KAAgBV,KAAI,SAAA0B,GAAM,OAC1F,0BACE,yBACU,OAAPpC,QAAO,IAAPA,OAAA,EAAAA,EAASwC,WAAT,OAAoBxC,QAApB,IAAoBA,OAApB,EAAoBA,EAASkC,OAAO2B,QAAO,SAAA1B,GAAO,OAAIA,EAAQC,SAAWA,KAAQ1B,KAAI,SAAAyB,GAAO,OAC3F,yBACE,eAAGhD,UAAU,aAAaC,KAAI,yBAAaY,QAAb,IAAaA,OAAb,EAAaA,EAASuB,QAAtB,mBAAwCa,EAAxC,oBAA0DD,EAAQ2B,QAAhG,sBACY3B,EAAQ2B,OADpB,MAC+B3B,EAAQ/B,SAFhC+B,EAAQ4B,WAHb3B,mB","sources":["SocialButtons.js","ImdbTitleDetails.js","SerieDetails.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\nimport { faWhatsapp, faFacebook, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport './SocialButtons.css';\n\nexport default function SocialButtons({ shareUrl }) {\n   return (\n    <div className=\"social-buttons-wrapper\">\n        <a className=\"btn btn-circle\" href={`https://api.whatsapp.com/send?text=${shareUrl}`}>\n            <FontAwesomeIcon icon={faWhatsapp} size=\"lg\" />\n        </a>\n        <a className=\"btn btn-circle\" href={`https://www.facebook.com/sharer/sharer.php?u=${shareUrl}`}>\n            <FontAwesomeIcon icon={faFacebook} size=\"lg\" />\n        </a>       \n        <a className=\"btn btn-circle\" href={`https://twitter.com/intent/tweet?text=${shareUrl}`}>\n            <FontAwesomeIcon icon={faTwitter} size=\"lg\" />\n        </a>\n        <button className=\"btn btn-circle\" onClick={() => navigator.clipboard.writeText(shareUrl)}>\n            <FontAwesomeIcon icon={faLink} size=\"lg\" />\n        </button>\n    </div>\n  );\n}","import './ImdbTitleDetails.css';\nimport SocialButtons from './SocialButtons';\n\nexport default function ImdbTitleDetails({details}) {\n  return (\n      <div>\n\n        <h2>{details?.logo ? <img className=\"imdb-logo\" src={details?.logo} alt={details?.name}></img> : details?.name}</h2>\n        \n        <SocialButtons shareUrl={details.shareUrl} />\n\n        <p>\n          {details?.runtime && \n            <span>{details?.runtime} | </span>\n          } \n          <span>{details?.year} | </span>          \n          <span>IMDB rating: {details?.imdbRating}</span>\n        </p>\n        \n        {details?.genre && details.genre.length > 0 &&\n            <div className=\"genre-container\">\n                <h3>Genre</h3>\n                {details?.genre?.map(function(genre) {\n                    return <span key={genre}>{genre} </span>;\n                })}\n            </div>\n        }\n\n        {details?.director && details.director.length > 0 &&\n            <div className=\"director-container\">\n                <h3>Director</h3>\n                {details?.director?.map(function(director) {\n                    return <span key={director}>{director}&nbsp;</span>;\n                })}\n            </div>\n        }\n\n        {details?.writer && details.writer.length > 0 &&\n            <div className=\"writer-container\">   \n                <h3>Writer</h3>\n                {details?.director?.map(function(director) {\n                    return <span key={director}>{director}&nbsp;</span>;\n                })}\n            </div>\n        }\n\n        {details?.cast && details.cast.length > 0 &&\n        <div className=\"cast-container\">\n            <h3>Cast</h3>\n\n            {details?.cast?.map(function(actor) {\n                return (<span key={actor}>{actor}&nbsp;</span>);\n            })}\n            </div>\n        }\n      </div>\n  );\n}\n","import './SerieDetails.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ImdbTitleDetails from \"./ImdbTitleDetails\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport constants from './config/constants';\n\nexport default function SerieDetails() {\n  let params = useParams();\n  const [details, setDetails] = useState([]);\n  const [selectedSeason, setSelectedSeason] = useState([]);\n\n  useEffect(() => {\n    const imdb_id = params.imdb_id;\n    const apiUrl = `https://v3-cinemeta.strem.io/meta/series/${imdb_id}.json`;\n    fetch(apiUrl)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n\n        let seasonsDup = data.meta.videos\n          .map(episode => {\n            return episode.season;\n          });\n        console.log(seasonsDup);\n        seasonsDup.sort((a, b) => a - b);\n        // remove duplicates\n        const seasons = [...new Set(seasonsDup)];\n        // if array contains element with value 0 then move it to last position\n        if (seasons.includes(0)) {\n          seasons.push(seasons.splice(seasons.indexOf(0), 1)[0]);\n        }\n\n        console.log(seasons);\n\n        const shareUrl = `${window.location.origin}/series/${data.meta.imdb_id}`;\n        var serie = { ...data.meta, shareUrl, seasons };\n        console.log(serie);\n        setDetails(serie);\n        setSelectedSeason(1);\n        document.title = `${data.meta.name} - ${constants.SITE_TITLE}`;\n      })\n      .catch(error => console.log(error));\n  }, [params.imdb_id]);\n\n  function handleSeasonChange(season) {\n    setSelectedSeason(season);\n  }\n\n  return (\n    <div \n      className=\"imdb-title-container dark-overlay\" \n      style={{ background: \"linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(\" + details?.background + \")\" }}\n    >\n      <Container>\n        <Row>\n          <Col className=\"serieDetails\" xs={12} md={6} xl={8}>\n            <ImdbTitleDetails details={details} />\n          </Col>\n          <Col className=\"seasonsList\" xs={12} md={6} xl={4}>\n            <h2>Seasons</h2>\n            {details?.seasons && details?.seasons.map(season => (\n              <button className={\"btn season \" + (season === selectedSeason ? \" active\" : \"\")} key={season} onClick={() => handleSeasonChange(season)}>\n                <span>{season === 0 ? 'special' : season}</span>\n              </button>\n            ))}\n            <hr></hr>\n            {details?.seasons && details?.seasons.filter(season => season === selectedSeason).map(season => (\n              <div key={season}>\n                <ul>\n                  {details?.seasons && details?.videos.filter(episode => episode.season === season).map(episode => (\n                    <li key={episode.id}>\n                      <a className=\"text-white\" href={`/series/${details?.imdb_id}/season-${season}/episode-${episode.number}`}>\n                        Episode: {episode.number} - {episode.name}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n"],"names":["SocialButtons","shareUrl","className","href","icon","faWhatsapp","size","faFacebook","faTwitter","onClick","navigator","clipboard","writeText","faLink","ImdbTitleDetails","details","logo","src","alt","name","runtime","year","imdbRating","genre","length","map","director","writer","cast","actor","SerieDetails","params","useParams","useState","setDetails","selectedSeason","setSelectedSeason","useEffect","imdb_id","apiUrl","fetch","then","response","json","data","console","log","seasonsDup","meta","videos","episode","season","sort","a","b","seasons","Set","includes","push","splice","indexOf","window","location","origin","serie","document","title","constants","catch","error","style","background","xs","md","xl","handleSeasonChange","filter","number","id"],"sourceRoot":""}